#version 330

in vec3 vertex_position;
in vec3 vertex_normal;
in vec2 vertex_texture;


out vec3 result;
out vec2 TexCoord;

vec3 LightPosition = vec3 (10.0, 10.0, 4.0); // Light position in world coords.
vec3 lightColor = vec3(1.0, 1.0, 1.0);
vec3 ourColor = vec3(1.0, 1.0, 1.0);

uniform mat4 view;
uniform mat4 proj;
uniform mat4 model;

void main(){


	// ambient
    	float ambientStrength = 0.5;
    	vec3 ambient = ambientStrength * lightColor;
  	
    	// diffuse 
	vec3 FragPos = vec3(model * vec4(vertex_position, 1.0));
    	vec3 norm = normalize(vertex_normal);
   	vec3 lightDir = normalize(LightPosition - FragPos);
    	float diff = max(dot(norm, lightDir), 0.0);
    	vec3 diffuse = diff * lightColor;
            
    	result = (ambient + diffuse) * ourColor;

  
	// Convert position to clip coordinates and pass along
	gl_Position = proj * view * model * vec4(vertex_position,1.0);
  
	TexCoord = vertex_texture;

}



  