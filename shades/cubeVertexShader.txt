#version 330

uniform mat4 view;
uniform mat4 proj;
uniform mat4 model;

in vec3 position;
in vec3 normal;
in vec2 texCoord;

out vec3 result;
out vec2 TexCoord;

vec3 lightPos = vec3(1.2, 1.0, 2.0); 
vec3 lightColor = vec3(1.0, 1.0, 1.0);
vec3 ourColor = vec3(1.0, 1.0, 1.0);

void main()
{ 

    
    	// ambient
    	float ambientStrength = 0.1;
    	vec3 ambient = ambientStrength * lightColor;
  	
    	// diffuse 
	vec3 FragPos = vec3(model * vec4(position, 1.0));
    	vec3 norm = normalize(normal);
   	vec3 lightDir = normalize(lightPos - FragPos);
    	float diff = max(dot(norm, lightDir), 0.0);
    	vec3 diffuse = diff * lightColor;
            
    	result = (ambient + diffuse) * ourColor;

	gl_Position = proj * view * model * vec4(position, 1.0);
	
    	TexCoord = texCoord;
	
}